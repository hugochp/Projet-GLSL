{
 "ver": "0.1",
 "info": {
  "id": "lcs3Ds",
  "date": "0",
  "viewed": 0,
  "name": "Matrix Propagation",
  "description": "Matrix Propagation",
  "likes": 0,
  "published": "Private",
  "usePreview": 0,
  "tags": [
   "matrix"
  ],
  "hasliked": 0,
  "parentid": "",
  "parentname": ""
 },
 "renderpass": [
  {
   "inputs": [],
   "outputs": [
    {
     "id": "4dfGRr",
     "channel": 0
    }
   ],
   "code": "vec3 palette(float t) {\n    vec3 a = vec3(0.3, 0.1, 0.5);  \n    vec3 b = vec3(0.4, 0.5, 0.2);  \n    vec3 c = vec3(0.8, 0.2, 0.3);  \n    vec3 d = vec3(0.2, 0.2, 1.);  \n\n    return a + b * cos(10. * (c * t + d)) * cos(20. * (c * t + d));\n}\n\nvec3 col;\nvec2 uv;\nvec2 gv;\nfloat t;\nfloat s;\nfloat m; \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    for(float i = 9.0; i < 15.0; i++){\n    \n        uv = (fragCoord - 0.5 * iResolution.xy) / ((1.0 + 1.*i) * iResolution.y);  \n        gv = uv * 20. * i * i ;\n        gv = fract(gv * (1.0 + 0.2*i) * 2.) - 0.5;\n\n        t = i * iTime * 0.05;\n\n        s = (sin(t - length(uv * (1.0 + 0.2*i) * 8.0) * 5.0) * 1. + 0.5) * .5;\n        m = (smoothstep(s, s - 0.6, length(gv)) + s * 1.) / (1.0 + 0.2*i);\n\n        col -= palette(t + (1.0 - 1.*i) * 0.2 * m) * m;\n    \n    }\n\n\n    fragColor = vec4(col, 1.0);\n}",
   "name": "Image",
   "description": "",
   "type": "image"
  }
 ]
}