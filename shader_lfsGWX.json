{
 "ver": "0.1",
 "info": {
  "id": "lfsGWX",
  "date": "0",
  "viewed": 0,
  "name": "Jamaican palette shader",
  "description": "waving palette sinus projection",
  "likes": 0,
  "published": "Private",
  "usePreview": 0,
  "tags": [
   "palettewaving"
  ],
  "hasliked": 0,
  "parentid": "",
  "parentname": ""
 },
 "renderpass": [
  {
   "inputs": [],
   "outputs": [
    {
     "id": "4dfGRr",
     "channel": 0
    }
   ],
   "code": "vec3 palette(float t) {\n    vec3 a = vec3(0.5, 0.5, 0.2);\n    vec3 b = vec3(1., 0.5, 0.2);\n    vec3 c = vec3(1.0, 0.8, 1.0);\n    vec3 d = vec3(0.163, 1., 0.157);\n\n    return a + b * cos(6.28318 * (c * t + d));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (4.0 * fragCoord - iResolution.xy) / min(iResolution.y, iResolution.x);\n\n    vec3 position = vec3(uv - 2., 1.0);\n\n    float rotationAngle = 0.0;\n    mat2 rotationMatrix = mat2(cos(rotationAngle), -sin(rotationAngle), sin(rotationAngle), cos(rotationAngle));\n    position.xy = rotationMatrix * position.xy;\n\n    position.z = sin(position.x * 1. + iTime) * cos(position.y * 1. + iTime) + 2.;\n\n    position.x += 0.5 * sin(iTime * 0.2);\n    position.z += 4. * sin(iTime * 0.2);\n\n    vec2 projection = position.xy / (position.z + 10.0);\n\n    float colorFactor = 0.5 * cos(iTime + projection.x * 50.0);\n    vec3 finalColor = palette(length(uv) + colorFactor);\n\n    fragColor = vec4(finalColor, 1.0);\n}\n",
   "name": "Image",
   "description": "",
   "type": "image"
  }
 ]
}