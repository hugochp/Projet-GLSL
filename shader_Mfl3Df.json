{
 "ver": "0.1",
 "info": {
  "id": "Mfl3Df",
  "date": "0",
  "viewed": 0,
  "name": "Kishimisu inspiration",
  "description": "kimshimisu type beat",
  "likes": 0,
  "published": "Private",
  "usePreview": 0,
  "tags": [
   "kishimisu"
  ],
  "hasliked": 0,
  "parentid": "",
  "parentname": ""
 },
 "renderpass": [
  {
   "inputs": [],
   "outputs": [
    {
     "id": "4dfGRr",
     "channel": 0
    }
   ],
   "code": "vec3 palette(float t) {\n    vec3 a = vec3(0.1, 0.1, 0.1);  \n    vec3 b = vec3(0.4, 0.5, 0.2);  \n    vec3 c = vec3(0.8, 0.7, 0.3);  \n    vec3 d = vec3(0.2, 1., 1.);  \n\n    return a + b * cos(10. * (c * t + d)) * cos(3. * (c * t + d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;  \n\n    vec2 gv = uv * 3.0 ;\n\n    float t = iTime * 0.3;\n    \n    gv = fract(3.5 * gv) - 0.5;\n\n    float s = (sin(t - length(uv * 2.0) * 7.0) * 0.8 + 0.5) * 0.5;\n    float m = smoothstep(s, s - 0.6, length(gv)) + s*1.;\n\n    vec3 col = palette(t + 0.5 * m) * m;\n\n    fragColor = vec4(col, 1.0);\n}",
   "name": "Image",
   "description": "",
   "type": "image"
  }
 ]
}